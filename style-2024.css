body,
html {
    margin: 0;
    padding: 0;
    font-family: Arial, sans-serif;
    scroll-behavior: smooth;
}

.header {
    background-color: #333;
    color: white;
    text-align: center;
    padding: 20px;
    font-size: 24px;
    position: relative;
}


.menu {
    display: flex;
    justify-content: center;
    background-color: #333;
    padding: 10px 0;
}

.menu a {
    color: white;
    padding: 10px 20px;
    text-decoration: none;
}

.menu a:hover {
    background-color: #555;
}

.hamburger {
    display: none;
    font-size: 30px;
    cursor: pointer;
    position: absolute;
    top: 20px;
    right: 20px;
}

/* Container for narrower text content */
.container {
    max-width: 750px;
    /* Limit width of the content */
    margin: 0 auto;
    /* Center the content */
    padding: 20px;
    /* Add some padding */
}

/* Mobile view menu - toggled by hamburger */
.menu.hidden {
    display: none;
}

.menu.visible {
    display: block;
    flex-direction: column;
}

/* Section styling

To make the text become visible a bit earlier while scrolling, you need to adjust the way and timing when the visible class is added. This involves changing the threshold at which the class is applied or modifying the transform and opacity properties to create the desired effect. Here’s a step-by-step guide to achieve this:

To show the text earlier, you can adjust the JavaScript logic that determines when to add the visible class. For example, you might want to trigger the visibility when the user has scrolled a bit less than the current threshold.

Adjusting the transform and opacity properties in your CSS can also help the text appear earlier and more smoothly.

Larger Number (e.g., translateY(100px)): The element will be positioned further down from its final position. This means it will need to be scrolled further down before it comes into view and transitions to its final position.
Smaller Number (e.g., translateY(20px)): The element will be positioned closer to its final position, making it appear sooner as the user scrolls down.
Negative Number (e.g., translateY(-20px)): The element will be positioned above its final position. This can be used to animate elements coming in from above.

*/
.section {
    /* height: 100vh; */
    min-height: 20vh;
    /* Adjust height to a smaller value */
    display: flex;
    /* text-align: left; /* Aligns text to the left */
    justify-content: center;
    align-items: center;
    opacity: 0;
    transform: translateY(30px);
    /* Initially move down */
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

#sectionHome {
    min-height: 10vh;
    padding: 10px;
}

.visible {
    opacity: 1;
    transform: translateY(0);
}

/* Image swipe-in from the left */
.image-container {
    opacity: 0;
    transform: translateX(-100%);
    transition: opacity 1s ease-out, transform 1s ease-out;
}

.swipe-in {
    opacity: 1;
    transform: translateX(0);
}

.content {
    text-align: left;
}

.content h2 {
    font-family: 'vaakaruode', sans-serif;
    /* Use custom font with fallback */
}


/* ...................................... */
/*
o center-align the title in a specific section while keeping other text aligned to the left, you can target the title element specifically. Here’s how you can do it: 
Specific override for the Contact section 
*/
#section5contact {
    text-align: center;
    /* Aligns text to the center in the Contact section */
    margin-bottom: 0;
}

#section5contact h1,
#section5contact h2,
#section5contact h3 {
    text-align: center;
    /* Aligns titles in the Contact section to the center */
}

/* ...................................... */


.content img {
    max-width: 80%;
    height: auto;
    margin: 20px 0;
    border-radius: 10px;
}

.content h2 {
    font-size: 28px;
    color: #333;
}

.content p {
    font-size: 18px;
    color: #555;
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .content h2 {
        font-size: 24px;
    }

    .content p {
        font-size: 16px;
    }

    .content img {
        max-width: 100%;
    }

    /* Hide full menu in mobile and display hamburger */
    .menu {
        display: none;
    }

    .hamburger {
        display: block;
    }

    /* Show menu as vertical list on mobile when toggled */
    .menu.visible {
        display: flex;
        flex-direction: column;
    }
}

/* Media Queries for font sizes */
@media (max-width: 768px) {
    body {
        font-size: 16px;
    }
}

@media (max-width: 480px) {
    body {
        font-size: 14px;
    }
}






/* ...................................... */
/* Initially hide the element */
#copyright.hidden {
    display: none;
}

/* Ensure the element is visible when the 'hidden' class is not applied */
#copyright {
    display: block;
}

#copyright {
    background-color: #333;
    color: #fff;
    text-align: center;
    padding: 10px 0;
    position: fixed;
    bottom: 0;
    width: 100%;
    transition: opacity 0.5s;
    /* Add a smooth transition effect */
}

/* ...................................... */



/* ...................................... 
The issue seems to stem from the fact that object-fit: cover; works for media elements like <video> but is not suitable for static images like <img> unless the image has a fixed width and height. To fix the scaling issue for the PNG image, we need to handle the image and video differently while maintaining the desired scaling effect.

Solution: Separate CSS for Videos and Images
Here's how you can modify your CSS so that both the PNG image and MP4 video scale appropriately:

*/
.videodm {
    object-fit: cover;
    max-width: 80vw;
    max-height: 80vh;
    width: auto;
    height: auto;
    position: relative;
    top: 0;
    bottom: 0;
    left: 0px;
    right: 0;
    margin: auto;
}

/* ...................................... */
/* For the PNG image */
.videodm2 img {
    max-width: 80vw;
    /* Image takes up a maximum of 80% of the viewport width */
    max-height: 80vh;
    /* Image takes up a maximum of 80% of the viewport height */
    width: 100%;
    /* Image will scale to the full width of its container */
    height: auto;
    /* Maintain aspect ratio */
    display: block;
    /* Prevents inline spacing issues */
    margin: auto;
    /* Center the image horizontally */
}


/* ...................................... */
/* Cookie Consent Banner Styles */
.cookie-overlay {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: #f5f5f5;
    color: #333;
    border-top: 1px solid #ddd;
    padding: 15px;
    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    align-items: center;
    z-index: 1000;
    box-sizing: border-box;
}

.close-icon {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 24px;
    cursor: pointer;
    color: #999;
}

.title-wrap-policy h4 {
    margin: 0;
    font-size: 18px;
    font-weight: bold;
}

.content-wrap {
    text-align: center;
}

/* ...................................... */


/* Social Media Links */
.social-links {
    display: flex;
    gap: 20px;
    /* Adjust spacing between buttons - small that ok in mobile */
    margin-top: 10px;
    padding: 10px;
    margin-bottom: 80px;
    /* Increase bottom margin for the entire container */
    justify-content: center;
    /* Center the container horizontally */
}

.social-button {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 20%;
    /* Make the button circular */
    text-align: center;
    line-height: 20px;
    color: white;
    /* Icon color */
    transition: background-color 0.3s, transform 0.3s;
    font-size: 24px;
    /* Adjust icon size */
}


.social-icon {
    width: 32px;
    /* Adjust size as needed */
    height: 32px;
    /* Adjust size as needed */
    object-fit: contain;
    /* Maintain aspect ratio */
}

/* Increase bottom margin for each button */
.social-button+.social-button {
    margin-top: 0px;
    margin-bottom: 10px;
    /* Adjust this value for more or less space between rows of buttons */
}

.social-button:hover {
    transform: scale(1.4);
    /* Slightly enlarge on hover */
}

/* Specific styles for different platforms */
.facebook {
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}

.twitter {
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}

.pinterest {
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}

.youtube {
    background-color: #ddd;
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}

.instagram {
    background-color: #ddd;
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}


.tiktok {
    background-color: #ddd;
    width: 30px;
    /* Adjust size as needed */
    height: 30px;
    /* Adjust size as needed */
}



/* Define the custom font 

TTF not working in Chrome::after
https://stackoverflow.com/questions/62026207/font-face-wont-work-for-my-ttf-file-wont-load-properly


https://cloudconvert.com/ttf-to-woff2

create font ttf>
https://fontstruct.com/fontstructor/edit

INSTALL IN WINDOWS
RIGHT CLICK AND USE E.G. IN GIMP

https://stackoverflow.com/questions/30020488/adding-local-ttf-fonts-using-font-face-in-css

TTF to WOFF2 Converter
CloudConvert converts your font files online. Amongst many others, we support TTF, OTF and WOFF. No need to download any software.

convert ttf to woff and then woff to woff2
https://cloudconvert.com/woff-to-woff2

*/
@font-face {
    font-family: 'vaakaruode';
    src: url('https://vaakaruode.github.io/assets/font/vaakaruode/vaakaruode2.ttf') format('truetype'),
        url("https://vaakaruode.github.io/assets/font/vaakaruode/vaakaruode2.woff") format("woff"),
        url("https://vaakaruode.github.io/assets/font/vaakaruode/vaakaruode2.woff2") format("woff2");
    font-weight: normal;
    font-style: normal;
}



/* CSS for styling the link */
a {
    color: #007BFF; /* Blue color for the link */
    text-decoration: none; /* Remove underline */
    font-weight: bold; /* Bold text */
}

a:hover {
    color: #0056b3; /* Darker blue on hover */
    text-decoration: underline; /* Underline on hover */
}